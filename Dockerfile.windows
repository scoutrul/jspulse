FROM node:20-alpine AS base

WORKDIR /app

# Install pnpm and concurrently for running multiple processes
RUN npm install -g pnpm concurrently

# Copy root package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Copy package.json from each package
COPY backend/package.json ./backend/
COPY frontend/package.json ./frontend/
COPY shared/package.json ./shared/

# Install dependencies
RUN pnpm install

# Backend development stage for Windows
FROM base AS backend-dev

# Copy shared source files and build them first
COPY shared/ ./shared/
RUN pnpm --filter @jspulse/shared build

# Install development tools
RUN npm install -g nodemon tsx

# Copy backend source files
COPY backend/ ./backend/

WORKDIR /app/backend

# Expose port
EXPOSE 3001

# Create symlink for shared package (Windows compatibility)
RUN ln -sf /app/shared/dist /app/backend/node_modules/@jspulse/shared/dist

# Windows-friendly development command with proper path handling
CMD ["sh", "-c", "cd /app && pnpm --filter @jspulse/shared build && concurrently \"pnpm --filter @jspulse/shared dev\" \"cd backend && pnpm dev\""]

# Frontend development stage for Windows
FROM base AS frontend-dev

# Copy shared source files and build them first  
COPY shared/ ./shared/
RUN pnpm --filter @jspulse/shared build

# Copy frontend source files
COPY frontend/ ./frontend/

WORKDIR /app/frontend

# Expose ports (main + HMR)
EXPOSE 3000 24678

# Create symlink for shared package (Windows compatibility)
RUN ln -sf /app/shared/dist /app/frontend/node_modules/@jspulse/shared/dist

# Windows-friendly development command
CMD ["sh", "-c", "cd /app && pnpm --filter @jspulse/shared build && concurrently \"pnpm --filter @jspulse/shared dev\" \"cd frontend && pnpm dev --host 0.0.0.0\""] 