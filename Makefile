# JSPulse - –ö–æ—Ä–æ—Ç–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

# üåç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
UNAME_S := $(shell uname -s 2>/dev/null || echo Windows)
ifeq ($(UNAME_S),Windows_NT)
    OS_TYPE = windows
else ifeq ($(UNAME_S),Darwin)
    OS_TYPE = macos
else ifeq ($(UNAME_S),Linux)
    OS_TYPE = linux
else
    # –î–ª—è Windows –±–µ–∑ uname (–æ–±—ã—á–Ω—ã–π —Å–ª—É—á–∞–π)
    OS_TYPE = windows
endif

# üöÄ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é)
start:
ifeq ($(OS_TYPE),windows)
	@echo "ü™ü –ó–∞–ø—É—Å–∫ –Ω–∞ Windows..."
	docker-compose -f docker-compose.windows.yml up --build -d
else
	@echo "üçé –ó–∞–ø—É—Å–∫ –Ω–∞ macOS/Linux..."
	docker-compose --profile dev up --build -d
endif

# üõë –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –∫–æ–º–∞–Ω–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop:
ifeq ($(OS_TYPE),windows)
	docker-compose -f docker-compose.windows.yml down
else
	docker-compose down
endif

# üìã –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ï –ª–æ–≥–∏
logs:
ifeq ($(OS_TYPE),windows)
	docker-compose -f docker-compose.windows.yml logs -f
else
	docker-compose logs -f
endif

# üìä –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô —Å—Ç–∞—Ç—É—Å
status:
ifeq ($(OS_TYPE),windows)
	docker-compose -f docker-compose.windows.yml ps
else
	docker-compose ps
endif

# üßπ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞
clean:
ifeq ($(OS_TYPE),windows)
	docker-compose -f docker-compose.windows.yml down -v
	docker system prune -f
else
	docker-compose down -v
	docker system prune -f
endif

# üìä –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
init:
	@echo "üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö..."
	node init-data.js

# üéØ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –ó–ê–ü–£–°–ö (–±–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞)
up: start

# üéØ –ü–û–õ–ù–´–ô –ó–ê–ü–£–°–ö —Å –¥–∞–Ω–Ω—ã–º–∏ (—Å –ø–∞—Ä—Å–∏–Ω–≥–æ–º)
full: start init

# ===============================================
# –°–¢–ê–†–´–ï –ö–û–ú–ê–ù–î–´ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
# ===============================================

# üöÄ Development —Ä–µ–∂–∏–º (hot-reload) - macOS/Linux
dev:
	docker-compose --profile dev up --build

# üîß Development –≤ —Ñ–æ–Ω–µ (–°–ê–ú–ê–Ø –ö–û–†–û–¢–ö–ê–Ø!)
d:
	docker-compose --profile dev up --build -d

# üè≠ Production —Ä–µ–∂–∏–º
prod:
	docker-compose --profile prod up --build -d

# ü™ü Windows development —Ä–µ–∂–∏–º (—Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è Windows)
win:
	docker-compose -f docker-compose.windows.yml up --build

# ü™ü Windows development –≤ —Ñ–æ–Ω–µ
winbg:
	docker-compose -f docker-compose.windows.yml up --build -d

# üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ
down:
	docker-compose down

# üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Windows –≤–µ—Ä—Å–∏—é
windown:
	docker-compose -f docker-compose.windows.yml down

# üìã –õ–æ–≥–∏ Windows –≤–µ—Ä—Å–∏–∏
winlogs:
	docker-compose -f docker-compose.windows.yml logs -f

# üßπ –û—á–∏—Å—Ç–∏—Ç—å Windows –≤–µ—Ä—Å–∏—é
winclean:
	docker-compose -f docker-compose.windows.yml down -v
	docker system prune -f

# üìä –°—Ç–∞—Ç—É—Å Windows –≤–µ—Ä—Å–∏–∏
winstatus:
	docker-compose -f docker-compose.windows.yml ps

# üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ dev
restart: down d

# üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Windows
winrestart: windown winbg

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
COMPOSE_FILE = docker-compose.yml

# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã  
help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  up       - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç —Å –Ω—É–ª—è (–æ—á–∏—Å—Ç–∫–∞ + —Å–±–æ—Ä–∫–∞ + –∑–∞–ø—É—Å–∫ + –¥–∞–Ω–Ω—ã–µ)"
	@echo "  d        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ dev —Ä–µ–∂–∏–º–µ"
	@echo "  down     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã" 
	@echo "  clean    - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ volumes –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
	@echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  seed     - –î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"
	@echo "  parse    - –ü–∞—Ä—Å–∏–Ω–≥ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å HeadHunter"
	@echo "  reparse  - –û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –∏ –ø–∞—Ä—Å–∏—Ç—å –∑–∞–Ω–æ–≤–æ"

# –ì–õ–ê–í–ù–ê–Ø –ö–û–ú–ê–ù–î–ê - –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç —Å –Ω—É–ª—è –Ω–∞ –ª—é–±–æ–π –º–∞—à–∏–Ω–µ
up:
	@echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º JSPulse —Å –Ω—É–ª—è..."
	@echo "üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ volumes..."
	docker-compose down -v --remove-orphans 2>/dev/null || true
	docker system prune -f --volumes 2>/dev/null || true
	@echo "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
	docker-compose up -d --build --force-recreate
	@echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend (30 —Å–µ–∫)..."
	sleep 30
	@echo "üìä –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ..."
	$(MAKE) seed
	@echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –∑–∞–ø—É—â–µ–Ω!"
	@echo "üåê Frontend: http://localhost:3000"
	@echo "üîß Backend API: http://localhost:3001"
	@echo "üóÑÔ∏è MongoDB: localhost:27017"

# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
d:
	docker-compose up -d --build

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ
down:
	docker-compose down

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
clean:
	docker-compose down -v --remove-orphans
	docker system prune -f --volumes

# –õ–æ–≥–∏
logs:
	docker-compose logs -f

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫
restart:
	docker-compose restart

# –î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
seed:
	@echo "üìä –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ MongoDB..."
	docker exec jspulse-mongodb-1 mongosh jspulse --eval "db.vacancies.insertMany([{title:'Frontend Developer',company:'Test Company',location:'Remote',url:'http://test.com/job1',publishedAt:new Date(),source:'test',skills:['JavaScript','React','TypeScript'],description:'Test vacancy'},{title:'React Developer',company:'Another Company',location:'Moscow',url:'http://test.com/job2',publishedAt:new Date(),source:'test',skills:['React','Node.js','MongoDB'],description:'Another test vacancy'},{title:'Full Stack Developer',company:'Tech Corp',location:'Saint Petersburg',url:'http://test.com/job3',publishedAt:new Date(),source:'test',skills:['JavaScript','Vue.js','Python','PostgreSQL'],description:'Full stack position'}]); console.log('‚úÖ Test data inserted');"

# –ü–∞—Ä—Å–∏–Ω–≥ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å HeadHunter
parse:
	@echo "üï∑Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –≤–∞–∫–∞–Ω—Å–∏–π —Å HeadHunter..."
	docker exec jspulse-backend-dev-1 tsx src/scripts/fetchAndSaveFromHH.ts

# –û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –∏ –∑–∞–ø–∞—Ä—Å–∏—Ç—å –∑–∞–Ω–æ–≤–æ
reparse:
	@echo "üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–∞—Ä—Å–∏–º –∑–∞–Ω–æ–≤–æ..."
	docker exec jspulse-mongodb-1 mongosh jspulse --eval "db.vacancies.deleteMany({}); console.log('üóëÔ∏è Database cleared');"
	$(MAKE) parse

.PHONY: start stop logs status clean init up full dev d down prod restart win winbg windown winlogs winclean winstatus winrestart help 