import mongoose from 'mongoose';
import { VacancyRepository } from './src/repositories/VacancyRepository.js';

async function testRepository() {
  try {
    const mongoUri = process.env.MONGODB_URI || 'mongodb://mongodb:27017/jspulse';
    await mongoose.connect(mongoUri);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ');
    
    const repository = new VacancyRepository();
    
    // –ù–∞–π–¥–µ–º –≤–∞–∫–∞–Ω—Å–∏—é —á–µ—Ä–µ–∑ Repository
    const vacancy = await repository.findById('684d98d1c860a12b8d798fbe');
    console.log('üìã –ù–∞–π–¥–µ–Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—è:', vacancy?.title);
    console.log('üîç –ü–æ–ª–µ fullDescription —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!vacancy?.fullDescription);
    console.log('üìù –í—Å–µ –ø–æ–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏:', Object.keys(vacancy || {}));
    
    if (vacancy?.fullDescription) {
      console.log('üìÑ –¢–∏–ø fullDescription:', typeof vacancy.fullDescription);
      console.log('üîë –ö–ª—é—á–∏ fullDescription:', Object.keys(vacancy.fullDescription));
    } else {
      console.log('‚ùå fullDescription –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ null');
    }
    
    await mongoose.disconnect();
    console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç MongoDB');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

testRepository(); 