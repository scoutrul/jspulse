import { config } from 'dotenv';
import path from 'path';
import { fileURLToPath } from 'url';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ backend/.env –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç cwd
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const envPath = path.resolve(__dirname, '../../.env');
config({ path: envPath });

// –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏: —É–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏, —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã —Å—Ç—Ä–æ–∫ –∏ –ø—Ä–æ–±–µ–ª—ã
const RAW_SESSION = process.env.TELEGRAM_SESSION || process.env.TELEGRAM_SESSION_STRING || '';
const NORMALIZED_SESSION = RAW_SESSION.replace(/^['"]|['"]$/g, '').replace(/\n/g, '').trim();

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Telegram API –∏ –ø–∞—Ä—Å–µ—Ä–∞
 */
export const TELEGRAM_CONFIG = {
  // –û—Å–Ω–æ–≤–Ω—ã–µ API credentials
  API_ID: parseInt(process.env.TELEGRAM_API_ID || '0', 10),
  API_HASH: process.env.TELEGRAM_API_HASH || '',

  // –°–µ—Å—Å–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)
  SESSION_STRING: NORMALIZED_SESSION,

  // –ö–∞–Ω–∞–ª—ã –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ (—Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏)
  CHANNELS: process.env.TELEGRAM_CHANNELS?.split(',').map(channel => channel.trim()) || [
    '@jobs_it_ru',
    '@job_vacancy_it',
    '@it_vakansii',
    '@devjobs_feed'
  ],

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä—Å–µ—Ä–∞
  PARSER_ENABLED: process.env.TELEGRAM_PARSER_ENABLED === 'true',
  PARSE_SCHEDULE: process.env.TELEGRAM_PARSE_SCHEDULE || '0 */6 * * *',
  MAX_MESSAGES: parseInt(process.env.TELEGRAM_MAX_MESSAGES || '100', 10),
  REQUEST_DELAY: parseInt(process.env.TELEGRAM_REQUEST_DELAY || '1000', 10),

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  RETRY_ATTEMPTS: 3,
  TIMEOUT: 30000,

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  KEYWORDS: {
    REQUIRED: [
      '—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫', 'developer', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', 'engineer', '–∏–Ω–∂–µ–Ω–µ—Ä',
      'frontend', '—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥', 'react', 'vue', 'angular', 'javascript', 'typescript',
      'backend', '–±—ç–∫–µ–Ω–¥', 'node.js', 'nodejs', 'nestjs', 'express',
      'fullstack', '—Ñ—É–ª–ª—Å—Ç–∞–∫',
      'junior', 'middle', 'senior', 'lead', 'teamlead'
    ],
    EXCLUDED: ['—Ä–µ–∫–ª–∞–º–∞', '—Å–ø–∞–º', '–ø—Ä–æ–¥–∞–º', '–∫—É–ø–ª—é', '–ø–æ–∫—É–ø–∫–∞', '–ø—Ä–æ–¥–∞–∂–∞']
  },

  PARSING: {
    TITLE_REGEX: /^\*\*([^*]+)\*\*/m,
    COMPANY_REGEX: /(?:\*\*)?–ö–æ–º–ø–∞–Ω–∏—è:(?:\*\*)?\s*([^\n]+)/gi,
    SALARY_REGEX: /(?:\*\*)?(?:–ó–ü|–£—Ä–æ–≤–µ–Ω—å –ó–ü):(?:\*\*)?\s*([^\n]+)|(?:–∑–∞—Ä–ø–ª–∞—Ç–∞|salary|–æ—Ç|–¥–æ)\s*:?\s*([\d\s\-‚ÇΩ$‚Ç¨]+(?:\s*(?:—Ä—É–±|euro|usd|net|–≥—Ä–æ—Å—Å|–Ω–∞ —Ä—É–∫–∏))?[^\n]*)/gi,
    FORMAT_REGEX: /\*\*–§–æ—Ä–º–∞—Ç:\*\*\s*([^\n]+)/gi,
    EMPLOYMENT_REGEX: /\*\*(?:–ó–∞–Ω—è—Ç–æ—Å—Ç—å|–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã):\*\*\s*([^\n]+)/gi,
    DESCRIPTION_REGEX: /\*\*–û–ø–∏—Å–∞–Ω–∏–µ:\*\*\s*(https?:\/\/[^\s\n]+)/gi,
    HASHTAGS_REGEX: /#(\w+)/g,
    HR_CONTACT_REGEX: /(?:—Å–≤—è–∑–∞—Ç—å—Å—è —Å hr|hr|–∫–æ–Ω—Ç–∞–∫—Ç)\s*[-‚Äì‚Äî]\s*(@\w+)/gi,
    LOCATION_REGEX: /(?:–º–æ—Å–∫–≤–∞|—Å–ø–±|–ø–∏—Ç–µ—Ä|—É–¥–∞–ª—ë–Ω–Ω–æ|remote|–æ—Ñ–∏—Å|–≥–∏–±—Ä–∏–¥|hybrid|–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω|–∞—Ä–º–µ–Ω–∏—è|–≥—Ä—É–∑–∏—è|—Å–µ—Ä–±–∏—è|–ø–æ–ª—å—à–∞|—Ä—É–º—ã–Ω–∏—è)/gi,
    SKILLS_REGEX: /#(react|vue|angular|javascript|typescript|nodejs|node\.js|nestjs|express|frontend|backend|fullstack)/gi
  }
} as const;

export function validateTelegramConfig(): { isValid: boolean; errors: string[] } {
  const errors: string[] = [];
  if (!TELEGRAM_CONFIG.API_ID || TELEGRAM_CONFIG.API_ID === 0) errors.push('TELEGRAM_API_ID is required and must be a valid number');
  if (!TELEGRAM_CONFIG.API_HASH) errors.push('TELEGRAM_API_HASH is required');
  if (TELEGRAM_CONFIG.CHANNELS.length === 0) errors.push('At least one Telegram channel must be specified in TELEGRAM_CHANNELS');
  if (TELEGRAM_CONFIG.MAX_MESSAGES <= 0) errors.push('TELEGRAM_MAX_MESSAGES must be a positive number');
  if (TELEGRAM_CONFIG.REQUEST_DELAY < 0) errors.push('TELEGRAM_REQUEST_DELAY must be a non-negative number');
  return { isValid: errors.length === 0, errors };
}

export function logTelegramConfig(): void {
  console.log('üì± Telegram Configuration:');
  console.log(`  - API ID: ${TELEGRAM_CONFIG.API_ID ? '***' : 'NOT SET'}`);
  console.log(`  - API Hash: ${TELEGRAM_CONFIG.API_HASH ? '***' : 'NOT SET'}`);
  console.log(`  - Session: ${TELEGRAM_CONFIG.SESSION_STRING ? 'SET' : 'NOT SET'}`);
  console.log(`  - Channels: ${TELEGRAM_CONFIG.CHANNELS.join(', ')}`);
  console.log(`  - Parser Enabled: ${TELEGRAM_CONFIG.PARSER_ENABLED}`);
  console.log(`  - Schedule: ${TELEGRAM_CONFIG.PARSE_SCHEDULE}`);
  console.log(`  - Max Messages: ${TELEGRAM_CONFIG.MAX_MESSAGES}`);
  console.log(`  - Request Delay: ${TELEGRAM_CONFIG.REQUEST_DELAY}ms`);
}

export const {
  API_ID: TELEGRAM_API_ID,
  API_HASH: TELEGRAM_API_HASH,
  SESSION_STRING: TELEGRAM_SESSION_STRING,
  CHANNELS: TELEGRAM_CHANNELS,
  PARSER_ENABLED: TELEGRAM_PARSER_ENABLED,
  PARSE_SCHEDULE: TELEGRAM_PARSE_SCHEDULE,
  MAX_MESSAGES: TELEGRAM_MAX_MESSAGES,
  REQUEST_DELAY: TELEGRAM_REQUEST_DELAY
} = TELEGRAM_CONFIG;