// import { parseHTML } from "linkedom"; // –£–¥–∞–ª—è–µ–º –∏–º–ø–æ—Ä—Ç, –µ—Å–ª–∏ –ø–∞–∫–µ—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
import ky, { HTTPError } from "ky";
import type { DescriptionContent } from "../types/DescriptionContent.js";

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è shared
interface BaseVacancy {
  externalId: string;
  title: string;
  company: string;
  location: string;
  url: string;
  source: string;
}

interface HHSkill {
  name: string;
}

interface HHVacancyRaw {
  id: string;
  name: string;
  employer?: { name: string };
  area?: { name: string };
  alternate_url: string;
  published_at: string;
  snippet?: {
    responsibility?: string;
    requirement?: string;
  };
  description?: string;
  key_skills?: HHSkill[];
  salary?: {
    from?: number;
    to?: number;
    currency?: string;
  };
  experience?: { name: string };
  employment?: { name: string };
  address?: { raw: string };
}
import { HH_API_BASE_URL } from "../config/api.js";
import { DescriptionService } from "../services/DescriptionService.js";

// –û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ https://github.com/hhru/api/blob/master/docs_eng/vacancies.md

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö
const SOURCE_HH = "hh.ru";

// –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ –ø—Ä–µ–≤—å—é
const PREVIEW_LENGTH = 1200;

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞–∫–∞–Ω—Å–∏–∏ —Å HH.ru
 */
interface HHVacancyFull extends HHVacancyRaw {
  description: string; // –ü–æ–ª–Ω–æ–µ HTML –æ–ø–∏—Å–∞–Ω–∏–µ
  branded_description?: string; // –ë—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞–≤—ã–∫–∞: —É–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
 */
function normalizeSkill(skill: string): string {
  return skill.trim().toLowerCase();
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞–∫–∞–Ω—Å–∏–∏ —Å HH.ru API
 */
export async function fetchFullVacancyDescription(vacancyId: string): Promise<string | null> {
  try {
    console.log(`üîç –ü–æ–ª—É—á–∞—é –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏ ${vacancyId}...`);

    const fullVacancy = await ky
      .get(`${HH_API_BASE_URL}/vacancies/${vacancyId}`, {
        headers: {
          "User-Agent": "JSPulse",
          "HH-User-Agent": "JSPulse",
        },
        timeout: 10000,
      })
      .json<HHVacancyFull>();

    if (fullVacancy.description) {
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏ ${vacancyId} (${fullVacancy.description.length} —Å–∏–º–≤–æ–ª–æ–≤)`);
      return fullVacancy.description;
    }

    console.log(`‚ö†Ô∏è –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏ ${vacancyId} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç`);
    return null;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏ ${vacancyId}:`, error);

    if (error instanceof HTTPError) {
      console.error(`üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (${error.response.status}):`, await error.response.text());
    }

    return null;
  }
}

/**
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ HeadHunter API –≤ –Ω–∞—à —Ñ–æ—Ä–º–∞—Ç –≤–∞–∫–∞–Ω—Å–∏–∏
 */
export function transformHHVacancyToIVacancy(hhVacancy: HHVacancyRaw): Omit<
  BaseVacancy,
  "publishedAt"
> & {
  skills: string[];
  description?: string;
  fullDescription?: DescriptionContent;
  processedHtml?: string;
  salaryFrom?: number;
  salaryTo?: number;
  salaryCurrency?: string;
  experience?: string;
  employment?: string;
  address?: string;
  publishedAt: Date;
  rawData: any;
} {
  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–≤—ã–∫–∏ (skills) –∏–∑ hhVacancy.key_skills –∏ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∏—Ö
  const skills = hhVacancy.key_skills
    ? hhVacancy.key_skills.map((skill: HHSkill) => normalizeSkill(skill.name))
    : [];

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é DescriptionService
  const processedDescriptions = DescriptionService.processHHVacancyDescription({
    snippet: hhVacancy.snippet,
    description: hhVacancy.description,
    fullDescription: undefined // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–∑–∂–µ —á–µ—Ä–µ–∑ API
  }, PREVIEW_LENGTH);

  // –ü—Ä–∏–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∫ –Ω–∞—à–µ–º—É —Ñ–æ—Ä–º–∞—Ç—É
  const transformed = {
    // –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—è
    externalId: hhVacancy.id,
    title: hhVacancy.name,
    company: hhVacancy.employer?.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è",
    location: hhVacancy.area?.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",
    url: hhVacancy.alternate_url,
    publishedAt: new Date(hhVacancy.published_at),
    source: SOURCE_HH,

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è —Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
    description: processedDescriptions.description,
    fullDescription: processedDescriptions.fullDescription,
    processedHtml: processedDescriptions.processedHtml,
    skills,
    salaryFrom: hhVacancy.salary?.from ?? undefined,
    salaryTo: hhVacancy.salary?.to ?? undefined,
    salaryCurrency: hhVacancy.salary?.currency ?? undefined,
    experience: hhVacancy.experience?.name,
    employment: hhVacancy.employment?.name,
    address: hhVacancy.address?.raw,

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    rawData: hhVacancy,
  };

  return transformed;
}

/**
 * –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º –ø–æ–ª–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
 */
export async function transformHHVacancyWithFullDescription(
  hhVacancy: HHVacancyRaw,
  fetchFullDescription: boolean = true
): Promise<ReturnType<typeof transformHHVacancyToIVacancy>> {
  const baseTransform = transformHHVacancyToIVacancy(hhVacancy);

  if (fetchFullDescription && !baseTransform.fullDescription) {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—ã–π API call
    const fullDescriptionHtml = await fetchFullVacancyDescription(hhVacancy.id);
    if (fullDescriptionHtml) {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é DescriptionService
      const processedDescriptions = DescriptionService.processHHVacancyDescription({
        snippet: hhVacancy.snippet,
        description: baseTransform.description,
        fullDescription: fullDescriptionHtml
      }, PREVIEW_LENGTH);

      // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º
      baseTransform.fullDescription = processedDescriptions.fullDescription;
      baseTransform.processedHtml = processedDescriptions.processedHtml;
    }
  }

  return baseTransform;
}

/**
 * –û—á–∏—â–∞–µ—Ç HTML –æ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 * –í –±—É–¥—É—â–µ–º, –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º DOMPurify –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∞
 */
export function sanitizeHTML(html: string): string {
  // –í –∏–¥–µ–∞–ª–µ, –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å DOMPurify
  return html;
}
