import express, { Request, Response, Router, RequestHandler, NextFunction } from "express";
import { isValidObjectId } from "mongoose";
import {
  VacancyDTOSchema,
  VacancySearchSchema,
  ApiResponseSchema,
  VacancyDTO,
  DI_TOKENS,
  IVacancyRepository,
  ICacheService,
  PAGINATION
} from "@jspulse/shared";
import { z } from "zod";
import { validateBody, validateQuery, validateParams } from "../middleware/validation.middleware.js";

const router: Router = express.Router();

/**
 * –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ID.
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å MongoDB ObjectId –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
 */
const IdParamSchema = z.object({
  id: z.string().refine(val => isValidObjectId(val), {
    message: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –≤–∞–∫–∞–Ω—Å–∏–∏"
  })
});

/**
 * –°—Ö–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞ –Ω–∞–≤—ã–∫–æ–≤.
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.
 */
const SkillsQuerySchema = z.object({
  limit: z.coerce.number().int().positive().default(PAGINATION.DEFAULT_PAGE_SIZE),
  page: z.coerce.number().int().nonnegative().default(PAGINATION.VALIDATION.MIN_PAGE)
});

/**
 * GET /skills/stats - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞–≤—ã–∫–æ–≤ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≤–∞–∫–∞–Ω—Å–∏–π.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –Ω–∞–≤—ã–∫–æ–≤ –≤ –ø—É–∑—ã—Ä—å–∫–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º–µ.
 */
router.get("/skills/stats", async (req: Request, res: Response) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º Repository –∏–∑ DI Container
    const vacancyRepository = req.resolve<IVacancyRepository>(DI_TOKENS.VACANCY_REPOSITORY);

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞–≤—ã–∫–∞—Ö
    const statistics = await vacancyRepository.getStatistics();

    res.json({
      success: true,
      data: statistics.bySkills,
      meta: {
        count: statistics.bySkills.length,
        totalVacancies: statistics.total
      }
    });
  } catch (error) {
    console.error("[GET /api/vacancies/skills/stats] –û—à–∏–±–∫–∞:", error);
    res.status(500).json({
      success: false,
      error: {
        code: 500,
        message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞–≤—ã–∫–æ–≤",
        details: error instanceof Error ? error.message : undefined
      }
    });
  }
});

/**
 * GET /skills - –ü–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏–∑ –≤—Å–µ—Ö –≤–∞–∫–∞–Ω—Å–∏–π.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç–∞ –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ.
 * –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Repository —Å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º (30 –º–∏–Ω—É—Ç).
 */
router.get("/skills", async (req: Request, res: Response) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º Repository –∏–∑ DI Container
    const vacancyRepository = req.resolve<IVacancyRepository>(DI_TOKENS.VACANCY_REPOSITORY);

    // –î–µ–ª–µ–≥–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤ –≤ Repository —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const skills = await vacancyRepository.getUniqueSkills();

    res.json({
      success: true,
      data: skills,
      meta: {
        count: skills.length
      }
    });
  } catch (error) {
    console.error("[GET /api/vacancies/skills] –û—à–∏–±–∫–∞:", error);
    res.status(500).json({
      success: false,
      error: {
        code: 500,
        message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –Ω–∞–≤—ã–∫–æ–≤",
        details: error instanceof Error ? error.message : undefined
      }
    });
  }
});

/**
 * GET / - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –Ω–∞–≤—ã–∫–∞–º.
 * –û—Å–Ω–æ–≤–Ω–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Repository Pattern —Å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º (3-5 –º–∏–Ω—É—Ç).
 */
router.get("/", validateQuery(SkillsQuerySchema), async (req: Request, res: Response) => {
  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ middleware –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ç–∏–ø–æ–≤
  const page = req.validatedQuery.page;
  const limit = req.validatedQuery.limit;
  const skills = req.query.skills;

  try {
    // –ü–æ–ª—É—á–∞–µ–º Repository –∏–∑ DI Container
    const vacancyRepository = req.resolve<IVacancyRepository>(DI_TOKENS.VACANCY_REPOSITORY);

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –¥–ª—è Repository
    // –ü—Ä–∏–≤–æ–¥–∏–º query –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É –º–∞—Å—Å–∏–≤—É –¥–ª—è —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    let skillsArray: string[] | undefined = undefined;
    if (skills) {
      if (Array.isArray(skills)) {
        skillsArray = skills.filter((skill): skill is string => typeof skill === 'string');
      } else if (typeof skills === 'string') {
        skillsArray = skills.split(',').map(s => s.trim());
      }
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ Repository –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const result = await vacancyRepository.findWithFilters({
      page,
      limit,
      skills: skillsArray
    });

    res.json({
      success: true,
      data: result.data,
      meta: {
        page: result.meta.page,
        limit: result.meta.limit,
        totalItems: result.meta.total,
        totalPages: result.meta.totalPages,
        hasNextPage: result.meta.hasNextPage,
        hasPrevPage: result.meta.hasPrevPage
      }
    });
  } catch (error) {
    console.error("[GET /api/vacancies] –û—à–∏–±–∫–∞:", error);
    res.status(500).json({
      success: false,
      error: {
        code: 500,
        message: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π",
        details: error instanceof Error ? error.message : undefined
      }
    });
  }
});

/**
 * GET /cache/stats - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—ç—à–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
 */
router.get("/cache/stats", async (req: Request, res: Response) => {
  try {
    // –ü–æ–ª—É—á–∞–µ–º Cache Service –∏–∑ DI Container
    const cacheService = req.resolve<ICacheService>(DI_TOKENS.CACHE_SERVICE);
    const stats = await cacheService.getStats();

    res.json({
      success: true,
      data: stats,
      meta: {
        description: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞ –≤–∞–∫–∞–Ω—Å–∏–π",
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    console.error("[GET /api/vacancies/cache/stats] –û—à–∏–±–∫–∞:", error);
    res.status(500).json({
      success: false,
      error: {
        code: 500,
        message: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—ç—à–∞",
        details: error instanceof Error ? error.message : undefined
      }
    });
  }
});

/**
 * GET /:id - –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞–∫–∞–Ω—Å–∏–∏.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏.
 * Repository –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é ID –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π (15 –º–∏–Ω—É—Ç).
 */
router.get("/:id", validateParams(IdParamSchema), async (req: Request, res: Response) => {
  const { id } = req.params;

  try {
    // –ü–æ–ª—É—á–∞–µ–º Repository –∏–∑ DI Container
    const vacancyRepository = req.resolve<IVacancyRepository>(DI_TOKENS.VACANCY_REPOSITORY);

    // Repository –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é ObjectId, –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    const vacancy = await vacancyRepository.findById(id);

    if (!vacancy) {
      res.status(404).json({
        success: false,
        error: {
          code: 404,
          message: "–í–∞–∫–∞–Ω—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        }
      });
      return;
    }

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const testVacancy = {
      ...vacancy,
      fullDescription: "FORCED_FULL_DESCRIPTION_TEST",
      testFullDesc: "FORCED_TEST_VALUE"
    };

    console.log('üö® FORCED DEBUG: –ü–æ–ª—è –≤–∞–∫–∞–Ω—Å–∏–∏:', Object.keys(testVacancy));
    console.log('üö® FORCED DEBUG: fullDescription:', testVacancy.fullDescription);

    res.json({
      success: true,
      data: testVacancy
    });
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ ${id}:`, error);
    res.status(500).json({
      success: false,
      error: {
        code: 500,
        message: `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ ${id}`,
        details: error instanceof Error ? error.message : undefined
      }
    });
  }
});

export default router;
